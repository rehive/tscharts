{{- $replicaCount := .Values.deployment.replicaCount -}}
{{- $repository := .Values.image.repository -}}
{{- $postgres := .Values.postgres -}}
{{- $rabbitmq := .Values.rabbitmq -}}
{{- $redis := .Values.redis -}}
{{- $tag := .Values.image.tag -}}
{{- $serviceName := include "fullname" . -}}
{{- $revision := .Release.Revision -}}

{{- if .Values.workersEnabled -}}
{{- range $worker := .Values.workers }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $worker.name }}
spec:
  replicas: {{ $worker.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  template:
    metadata:
      labels:
        app: {{ $worker.name }}
      annotations:
        helm/revision: "{{ $revision }}" # Hack to force restart on upgrade
    spec:
      containers:
      - name: {{ $worker.name }}
        image: "{{ $repository }}:{{ $tag }}"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ $worker.internalPort }}
        command: {{ $worker.command }}
        env:
        {{- if $postgres.enabled }}
          - name: POSTGRES_HOST
            value: "{{ $postgres.host}}"
          - name: POSTGRES_PORT
            value: "{{ $postgres.port}}"
          - name: POSTGRES_USER
            value: "{{ $postgres.user }}"
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ $postgres.secret.name}}"
                key: "{{ $postgres.secret.key}}"
        {{- end }}
        {{- if $redis.enabled }}
          - name: REDIS_HOST
            value: "{{ $redis.host}}"
          - name: REDIS_PORT
            value: "{{ $redis.port}}"
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ $redis.secret.name}}"
                key: "{{ $redis.secret.key}}"
        {{- end }}
        {{- if $rabbitmq.enabled }}
          - name: RABBITMQ_HOST
            value: "{{ $rabbitmq.host}}"
          - name: RABBITMQ_PORT
            value: "{{ $rabbitmq.port}}"
          - name: RABBITMQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ $rabbitmq.secret.name}}"
                key: "{{ $rabbitmq.secret.key}}"
        {{- end }}
        envFrom:
          - secretRef:
              name: {{ $serviceName }}
        resources:
{{ toYaml $worker.resources | indent 10 }}
---
{{ end }}
{{- end -}}
