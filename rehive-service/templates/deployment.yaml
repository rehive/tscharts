apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      annotations:
        helm/revision: "{{ .Release.Revision }}" # Hack to force restart on upgrade
      labels:
        app: webapp
    spec:
      containers:
      - name: webapp
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        command: {{ .Values.deployment.command }}
        env:
        {{- if .Values.postgres.enabled }}
          - name: POSTGRES_HOST
            value: "{{ .Values.postgres.host}}"
          - name: POSTGRES_PORT
            value: "{{ .Values.postgres.port}}"
          - name: POSTGRES_USER
            value: "{{ .Values.postgres.user }}"
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.postgres.secret.name}}"
                key: "{{ .Values.postgres.secret.key}}"
        {{- end }}
        {{- if .Values.redis.enabled }}
          - name: REDIS_HOST
            value: "{{ .Values.redis.host}}"
          - name: REDIS_PORT
            value: "{{ .Values.redis.port}}"
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.redis.secret.name}}"
                key: "{{ .Values.redis.secret.key}}"
        {{- end }}
        {{- if .Values.rabbitmq.enabled }}
          - name: RABBITMQ_HOST
            value: "{{ .Values.rabbitmq.host}}"
          - name: RABBITMQ_PORT
            value: "{{ .Values.rabbitmq.port}}"
          - name: RABBITMQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.rabbitmq.secret.name}}"
                key: "{{ .Values.rabbitmq.secret.key}}"
        {{- end }}
        {{- if .Values.envFromSecret.enabled }}
        envFrom:
          - secretRef:
              name: {{ .Values.envFromSecret.secretName | default (include "fullname" .) }}
        {{- end }}
{{- if .Values.service.livenessProbe }}
        livenessProbe:
{{ toYaml .Values.service.livenessProbe | indent 10 }}
{{- end }}
{{- if .Values.service.readinessProbe }}
        readinessProbe:
{{ toYaml .Values.service.readinessProbe | indent 10 }}
{{- end}}
        resources:
{{ toYaml .Values.deployment.resources | indent 10 }}
---
{{- if .Values.management.enabled }}
apiVersion: v1
kind: Pod
metadata:
  name: "{{ template "fullname" . }}-management"
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
  annotations:
    helm/revision: "{{ .Release.Revision }}" # Hack to force restart on upgrade
spec:
  containers:
  - name: management
    image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
    imagePullPolicy: {{ .Values.image.pullPolicy }}
    command: ['/bin/sh','-c', 'python manage.py runserver'] # Hack to create long-running pod
    env:
    {{- if .Values.postgres.enabled }}
      - name: POSTGRES_HOST
        value: "{{ .Values.postgres.host}}"
      - name: POSTGRES_PORT
        value: "{{ .Values.postgres.port}}"
      - name: POSTGRES_USER
        value: "{{ .Values.postgres.user }}"
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            name: "{{ .Values.postgres.secret.name}}"
            key: "{{ .Values.postgres.secret.key}}"
    {{- end }}
    {{- if .Values.redis.enabled }}
      - name: REDIS_HOST
        value: "{{ .Values.redis.host}}"
      - name: REDIS_PORT
        value: "{{ .Values.redis.port}}"
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            name: "{{ .Values.redis.secret.name}}"
            key: "{{ .Values.redis.secret.key}}"
    {{- end }}
    {{- if .Values.rabbitmq.enabled }}
      - name: RABBITMQ_HOST
        value: "{{ .Values.rabbitmq.host}}"
      - name: RABBITMQ_PORT
        value: "{{ .Values.rabbitmq.port}}"
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: "{{ .Values.rabbitmq.secret.name}}"
            key: "{{ .Values.rabbitmq.secret.key}}"
    {{- end }}
    {{- if .Values.envFromSecret.enabled }}
    envFrom:
      - secretRef:
          name: {{ .Values.envFromSecret.secretName | default (include "fullname" .) }}
    {{- end }}
    resources:
      {{- if .Values.management.resources }}
{{ toYaml .Values.management.resources | indent 6 }}
      {{- else}}
      requests:
        memory: 1G
        cpu: 266m
      limits:
        memory: 1G
        cpu: 266m
      {{- end }}
{{- end }}
